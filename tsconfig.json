{
    "compilerOptions": {
      /* Basic Options */
      "target": "ES2022",                     /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', 'ES2022', or 'ESNEXT'. */
      "module": "CommonJS",                  /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
      "outDir": "./dist",                    /* Redirect output structure to the directory. */
      "rootDir": "./src",                    /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
      "strict": true,                        /* Enable all strict type-checking options. */
      "esModuleInterop": true,             /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
      "skipLibCheck": true,                  /* Skip type checking of declaration files. */
      "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
      "resolveJsonModule": true,            /* Include modules imported with '.json' extension. */
  
      /* Additional Checks */
      "noUnusedLocals": true,                /* Report errors on unused locals. */
      "noUnusedParameters": true,            /* Report errors on unused parameters. */
      "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
      "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
  
      /* Module Resolution Options */
      "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      "baseUrl": ".",                        /* Base directory to resolve non-absolute module names. */
      "paths": {                             /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        "@/*": ["src/*"]
      },
  
      /* Source Map Options */
      "sourceMap": true,                     /* Generates corresponding '.map' file. */
  
      /* Experimental Options */
      "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
      "emitDecoratorMetadata": true,       /* Enables experimental support for emitting type metadata for decorators. */
  
      /* Type declaration files to be included in compilation */
      "types": ["node", "jest"]
    },
    "include": [
      "src/**/*"                             /* Include all files in the src directory */
    ],
    "exclude": [
      "node_modules",                        /* Exclude the node_modules directory */
      "dist"                                 /* Exclude the output directory */
    ]
  }